Segment s

OR
    Token@s
        form = "Capricorn"

    Token@s
        form = "Virgo"


kwic => plain
    context
        s
    entities
        s



Segment s

OR
    Token@s
        form = "Capricorn"

    sequence@s seq
        Token
            form = "old"
        Token
            form = "dog"


kwic => plain
    context
        s
    entities
        *



WITH RECURSIVE fixed_parts AS (
    SELECT
        s.segment_id AS s,
        ps.content AS content
    FROM (SELECT segment_id FROM bnc1.fts_vector6 vec WHERE vec.vector @@ '(Capricorn | 1a <1> 1dog)') AS fts_vector_s
    CROSS JOIN bnc1.segment6 s
    CROSS JOIN bnc1.prepared_segment ps
    WHERE
        s.segment_id = fts_vector_s.segment_id
        AND ps.segment_id = s.segment_id
),
disjuncts AS (
    SELECT 
        fixed_parts.s AS s,
        fixed_parts.content AS content,
        jsonb_build_array(tx.token_id) AS matches
    FROM fixed_parts
    CROSS JOIN bnc1.token6 tx
    CROSS JOIN bnc1.form tx_form
    WHERE
        tx_form.form_id = tx.form_id
        AND tx.segment_id = s
        AND (tx_form.form)::text = ('Capricorn')::text
    UNION ALL
    SELECT 
        fixed_parts.s AS s,
        fixed_parts.content AS content,
        jsonb_build_array(tx1.token_id, tx2.token_id) AS matches
    FROM fixed_parts
    CROSS JOIN bnc1.token6 tx1
    CROSS JOIN bnc1.token6 tx2
    CROSS JOIN bnc1.form tx1_form
    CROSS JOIN bnc1.form tx2_form
    WHERE 
        tx1_form.form_id = tx1.form_id AND tx1.segment_id = s
        AND tx2_form.form_id = tx2.form_id AND tx2.segment_id = s
        AND (tx1_form.form)::text = ('a')::text 
        AND (tx2_form.form)::text = ('dog')::text
        AND tx2.token_id = tx1.token_id + 1
)
SELECT * FROM disjuncts
LIMIT 10;










-- Capricorn or ("a dog" AND (water OR cat)) --


WITH RECURSIVE fixed_parts AS (
    SELECT
        s.segment_id AS s,
        ps.content AS content
    FROM (SELECT segment_id FROM bnc1.fts_vector6 vec WHERE vec.vector @@ '1Capricorn' OR (vec.vector @@ '1a <1> 1dog' AND (vec.vector @@ '1water' OR vec.vector @@ '1cat'))) AS fts_vector_s
    CROSS JOIN bnc1.segment6 s
    CROSS JOIN bnc1.prepared_segment ps
    WHERE
        s.segment_id = fts_vector_s.segment_id
        AND ps.segment_id = s.segment_id
),
disjuncts_nested AS (
    SELECT
            fixed_parts.s AS s,
            jsonb_build_array(tx.token_id) AS matches,
            fixed_parts.content AS content
        FROM fixed_parts
        CROSS JOIN bnc1.token6 tx
        CROSS JOIN bnc1.form tx_form
        WHERE
            tx_form.form_id = tx.form_id
            AND tx.segment_id = s
            AND (tx_form.form)::text = ('water')::text
        UNION ALL
        SELECT 
            fixed_parts.s AS s,
            jsonb_build_array(tx.token_id) AS matches,
            fixed_parts.content AS content
        FROM fixed_parts
        CROSS JOIN bnc1.token6 tx
        CROSS JOIN bnc1.form tx_form
        WHERE
            tx_form.form_id = tx.form_id
            AND tx.segment_id = s
            AND (tx_form.form)::text = ('cat')::text
),
main_disjuncts AS (
    SELECT
        fixed_parts.s AS s,
        jsonb_build_array(tx.token_id) AS matches,
        fixed_parts.content AS content
    FROM fixed_parts
    CROSS JOIN bnc1.token6 tx
    CROSS JOIN bnc1.form tx_form
    WHERE
        tx_form.form_id = tx.form_id
        AND tx.segment_id = s
        AND (tx_form.form)::text = ('Capricorn')::text
    UNION ALL
    SELECT
        disjuncts_nested.s AS s,
        jsonb_build_array(tx1.token_id, tx2.token_id) || disjuncts_nested.matches AS matches,
        disjuncts_nested.content AS content
    FROM disjuncts_nested
    CROSS JOIN bnc1.token6 tx1
    CROSS JOIN bnc1.token6 tx2
    CROSS JOIN bnc1.form tx1_form
    CROSS JOIN bnc1.form tx2_form
    WHERE 
        tx1_form.form_id = tx1.form_id AND tx1.segment_id = s
        AND tx2_form.form_id = tx2.form_id AND tx2.segment_id = s
        AND (tx1_form.form)::text = ('a')::text 
        AND (tx2_form.form)::text = ('dog')::text
        AND tx2.token_id = tx1.token_id + 1
)
SELECT * FROM main_disjuncts
LIMIT 50;





-- Capricorn or ("a dog" AND (water OR (cat AND (mouse OR cheese)))) --

disjunction0 AS (
    SELECT ...
    WHERE
        form = mouse
    UNION ALL
    SELECT
    WHERE
        form = cheese
),
disjunction1 AS (
    SELECT ...
    WHERE
        form = water
    UNION ALL
    SELECT ...
    FROM
        disjunction0
    WHERE
        form = cat
),
disjunction2 AS (
    SELECT ...
    WHERE
        form = Capricorn
    UNION ALL
    SELECT
    FROM disjunction1
    WHERE
        a dog
)




-- Capricorn OR ("a dog" AND (water OR cat) AND (mouse OR cheese)) --


disjunction0 AS (
    SELECT ...
    WHERE
        form = mouse
    UNION ALL
    SELECT
    WHERE
        form = cheese
),
disjunction1 AS (
    SELECT ...
    WHERE
        form = water
    UNION ALL
    SELECT
    WHERE
        form = cat
),
disjunction2 AS (
    SELECT ...
    FROM disjunction1
    CROSS JOIN disjunction0
    WHERE
        disjunction0.s = s
        a dog
    UNION ALL
    SELECT ...
    WHERE
        form = Capricorn
)






Segment s

OR
    Token@s
        form = "Capricorn"
    AND
        Token@s
            form = "Virgo"
        Token@s
            form = "Leo"


kwic => plain
    context
        s
    entities
        s

-- Capricorn OR (Virgo AND Leo) --

disjunction0 AS (
    SELECT ...
    WHERE
        form = Capricorn
    UNION ALL
    SELECT
    FROM fixed_parts
    CROSS t1
    CROSS t2
    WHERE
        t1.form = Virgo
        t2.form = Leo
)





Segment s

OR
    Token@s
        form = "Capricorn"
    AND
        Token@s
                form = "Virgo"
        OR
            AND
                Token@s
                    form = "Leo"
                OR                        
                    Token@s
                        form = "Sagittarius"
                    Token@s
                        form = "Aries"


kwic => plain
    context
        s
    entities
        s
