# PostgreSQL DB address and credentials
SQL_DATABASE=lcp_production
SQL_PORT=5432
SQL_HOST=db
#SQL_UPLOAD_USERNAME=postgres
#SQL_UPLOAD_PASSWORD=VSQT1LThIV
#SQL_WEB_USERNAME=postgres
#SQL_WEB_PASSWORD=VSQT1LThIV
#SQL_QUERY_USERNAME=postgres
#SQL_QUERY_PASSWORD=VSQT1LThIV
SQL_UPLOAD_USERNAME=lcp_production_importer
SQL_UPLOAD_PASSWORD=*bFguGBfb9bR3bzw
SQL_WEB_USERNAME=lcp_production_web_user
SQL_WEB_PASSWORD=YeG2!hcbvzZRL-xW
SQL_QUERY_USERNAME=lcp_production_query_engine
SQL_QUERY_PASSWORD=WfUEt4!jHq8EsZ9V

# To intialize the docker database
POSTGRES_DB=lcp_production
POSTGRES_USER=postgres
POSTGRES_PASSWORD=VSQT1LThIV

# LAMa configuration (+ admin user credentials)
# if there are not set
LAMA_API_URL=https://lama.test.linguistik.uzh.ch/api_lcp
LAMA_API_KEY=XYML6ekwmUOeiPghnmjX2ZYCoT3Qi4gV
#LAMA_API_URL=https://lama.test.linguistik.uzh.ch/api_lcp
#LAMA_API_KEY=TFDjG9YF7nw9TsgMTc07jgHFCSWZ6xl8
#AUTHENTICATION_CLASS=lcpvian.authenticate.Authentication
AUTHENTICATION_CLASS=lcpvian.authenticate_lama.Lama

# Media folder
UPLOAD_MEDIA_PATH=/opt/media/

# Redis configuration
REDIS_URL=redis://redis:6379/0
REDIS_DB_INDEX=-1
REDIS_WS_MESSSAGE_TTL=5000

# Query queue/job settings
QUERY_MIN_NUM_CONNECTIONS=8
QUERY_MAX_NUM_CONNECTIONS=8
QUERY_TIMEOUT=9999
QUERY_TTL=10000
QUERY_CALLBACK_TIMEOUT=10000
QUERY_ENTIRE_CORPUS_CALLBACK_TIMEOUT=99999
# number of seconds a group of frequency queries can run for before state becomes satisfied
QUERY_ALLOWED_JOB_TIME=1000.0
USE_CACHE=1

# Upload queue/job settings
UPLOAD_MIN_NUM_CONNECTIONS=8
UPLOAD_MAX_NUM_CONNECTIONS=8
UPLOAD_TIMEOUT=43200
UPLOAD_USE_POOL=true

# Connection pool general settings
POOL_NUM_WORKERS=3

# Importer memory/cpu management
IMPORT_MAX_CONCURRENT=4
IMPORT_MAX_MEMORY_GB=6
IMPORT_MAX_COPY_GB=1

# Logging
SENTRY_DSN=
SENTRY_ENVIRONMENT=lcpvian
SENTRY_TRACES_SAMPLE_RATE=1.0

DEFAULT_MAX_KWIC_LINES=450

# Backend deployment
AIO_PORT=9090

# Frontend authentication
JWT_SECRET_KEY=123

# currently unused/disabled
MAX_SIMULTANEOUS_JOBS_PER_USER=-1

# debug mode allows tracebacks and sql queries to appear in frontend
DEBUG=true

# Node Environment
NODE_ENV=USI

#APP_TYPE=lcphome
